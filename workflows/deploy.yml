#must replace some paths to fit our project
name: Deploy MERN Application

# Run this workflow when code is pushed to the "main" branch
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup Node.js (same version you use locally)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            frontend/package-lock.json

      # 3️⃣ Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # 4️⃣ Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # 5️⃣ Deploy frontend (React build files) to the server
      - name: Deploy frontend to server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "frontend/dist/*"
          target: "/var/www/html"
          strip_components: 2
          rm: true

      # 6️⃣ Deploy backend files (Node/Express)
      - name: Deploy backend files
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "server.js,package.json,package-lock.json"
          target: "/var/cardsServer"
          overwrite: true

      # 7️⃣ Install backend dependencies and restart the backend with PM2
      - name: Install dependencies and restart server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /var/cardsServer
            npm ci --production
            npm list -g pm2 || npm install -g pm2
            pm2 reload express-server --update-env || pm2 start server.js --name "express-server"
            pm2 save
            nginx -s reload
